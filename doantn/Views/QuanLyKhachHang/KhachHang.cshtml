@model List<doantn.ViewModel.KhachHangQuanLyViewModel>

<div class="page-header">
    <h2>Quản lý người dùng</h2>
</div>

<div class="table-responsive">
    <table class="table table-striped table-bordered">
        <thead>
            <tr>
                <th>STT</th>
                <th>Tài khoản</th>
                <th>Họ tên</th>
                <th>Email</th>
                <th>SĐT</th>
                <th>Giới tính</th>
                <th>Tên cấp</th>
                <th>Chức năng</th>
            </tr>
        </thead>
        <tbody>
            @if (Model != null && Model.Any())
            {
                int stt = 1;
                foreach (var user in Model)
                {
                    <tr>
                        <td>@stt</td>
                        <td>@user.TaiKhoan</td>
                        <td>@user.HoTen</td>
                        <td>@user.Email</td>
                        <td>@user.SoDT</td>
                        <td>
                            @(
                                user.GioiTinh == 1 ? "Nam" :
                                user.GioiTinh == 0 ? "Nữ" :
                                "Khác"
                             )
                        </td>
                        <td>@user.TenCap</td>
                        <td>
                            <a href="javascript:void(0)" onclick="openModalSuaKhachHang('@user.MaKhachHang')" class="btn btn-sm btn-edit">
                                <i class="fa-solid fa-pen"></i> Sửa
                            </a>
                            <a href="javascript:void(0)" onclick="xoaNguoiDung('@user.MaKhachHang', '@user.TaiKhoan')" class="btn btn-sm btn-delete">
                                <i class="fa-solid fa-trash"></i> Xóa
                            </a>
                        </td>
                    </tr>
                    stt++;
                }
            }
            else
            {
                <tr>
                    <td colspan="7" class="text-center">Không có người dùng nào.</td>
                </tr>
            }
        </tbody>
    </table>
</div>
<div class="modal fade" id="modalThemKhachHang" tabindex="-1" aria-labelledby="modalThemKhachHangLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form id="formThemKhachHang">
                <div class="modal-header">
                    <h5 class="modal-title" id="modalThemKhachHangLabel">Thêm người dùng</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Đóng"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-2">
                        <label class="form-label label-required">Tài khoản</label>
                        <input type="text" name="TaiKhoan" class="form-control"/>
                    </div>
                    <div class="mb-2">
                        <label class="form-label label-required">Mật khẩu</label>
                        <input type="password" name="MatKhau" class="form-control"/>
                    </div>
                    <div class="mb-2">
                        <label class="form-label label-required">Họ tên</label>
                        <input type="text" name="HoTen" class="form-control"/>
                    </div>
                    <div class="mb-2">
                        <label class="form-label label-required">Email</label>
                        <input type="" name="Email" class="form-control"/>
                    </div>
                    <div class="mb-2">
                        <label class="form-label label-required">Số điện thoại</label>
                        <input type="text" name="SoDT" class="form-control" />
                    </div>
                    <div class="mb-2">
                        <label class="form-label label-required">Giới tính</label>
                        <select name="GioiTinh" class="form-control select-dropdown">
                            <option value="" disabled selected hidden>Giới tính</option>
                            <option value="1">Nam</option>
                            <option value="0">Nữ</option>
                            <option value="3">Khác</option>
                        </select>
                    </div>
                    <div class="mb-2">
                        <label class="form-label label-required">Cấp độ</label>
                        <select name="MaCap" class="form-control select-dropdown" id="selectCapKhachHang">
                            <option value="" disabled selected hidden>Chọn cấp</option>
                        </select>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                    <button type="submit" class="btn btn-success">Thêm</button>
                </div>
            </form>
        </div>
    </div>
</div>
<div class="modal fade" id="modalSuaKhachHang" tabindex="-1" aria-labelledby="modalSuaKhachHangLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form id="formSuaKhachHang">
                <div class="modal-header">
                    <h5 class="modal-title" id="modalSuaKhachHangLabel">Chỉnh sửa người dùng</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" name="MaKhachHang" id="editMaKhachHang" />
                    <div class="mb-2"><label class="form-label label-required">Tài khoản</label><input type="text" name="TaiKhoan" id="editTaiKhoan" class="form-control" /></div>
                    <div class="mb-2"><label class="form-label label-required">Họ tên</label><input type="text" name="HoTen" id="editHoTen" class="form-control" /></div>
                    <div class="mb-2"><label class="form-label label-required">Email</label><input type="email" name="Email" id="editEmail" class="form-control" /></div>
                    <div class="mb-2"><label class="form-label label-required">Số điện thoại</label><input type="text" name="SoDT" id="editSoDT" class="form-control" /></div>
                    <div class="mb-2">
                        <label class="form-label label-required">Giới tính</label>
                        <select name="GioiTinh" id="editGioiTinh" class="form-control select-dropdown">
                            <option value="" disabled selected hidden>Giới tính</option>
                            <option value="1">Nam</option>
                            <option value="0">Nữ</option>
                            <option value="3">Khác</option>
                        </select>
                    </div>
                    <div class="mb-2">
                        <label class="form-label label-required">Cấp</label>
                        <select name="MaCap" id="editMaCap" class="form-control select-dropdown">
                            <option value="" disabled selected hidden>Chọn cấp</option>
                        </select>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                    <button type="submit" class="btn btn-success">Lưu</button>
                </div>
            </form>
        </div>
    </div>
</div>
@section Styles {
    <link rel="stylesheet" href="~/css/quanly.css" />
    <link rel="stylesheet" href="~/css/quanlykhachhang.css" />
}
@section Scripts {
    <script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
    <script>
        $(document).ready(function () {
            $('.table').DataTable({
                lengthChange: false,
                searching: true,
                info: false,
                paging: true,
                pageLength: 10,
                language: {
                    search: "Tìm kiếm:",
                    searchPlaceholder: "Nhập tài khoản, tên, email...",
                    paginate: {
                        previous: "<i class='fa-solid fa-chevron-left'></i>",
                        next: "<i class='fa-solid fa-chevron-right'></i>"
                    },
                    zeroRecords: "Không tìm thấy người dùng phù hợp",
                }
            });
            $(".dataTables_filter").append(`
                <button type="button" class="btn-add-new" onclick="openModalThemKhachHang()">
                    <i class="fa-solid fa-plus"></i> Thêm mới
                </button>
            `);
        });
        function openModalThemKhachHang() {
            $('#formThemKhachHang')[0].reset();
            $('#modalThemKhachHang').modal('show');
            loadCapKhachHang();
        }

        function loadCapKhachHang() {
            $.ajax({
                url: '/QuanLyKhachHang/GetDanhSachCap',
                method: 'GET',
                success: function (data) {
                    var select = $('#selectCapKhachHang');
                    select.find('option:not([disabled])').remove();
                    data.forEach(cap => {
                        select.append(`<option value="${cap.maCap}">${cap.tenCap}</option>`);
                    });
                },
                error: function () {
                    alert('Không thể tải cấp độ.');
                }
            });
        }
        $('#formThemKhachHang').submit(async function(e) {
            e.preventDefault();
            const taiKhoan = $('input[name="TaiKhoan"]').val().trim();
            const matKhau = $('input[name="MatKhau"]').val().trim();
            const hoTen = $('input[name="HoTen"]').val().trim();
            const email = $('input[name="Email"]').val().trim();
            const soDT = $('input[name="SoDT"]').val().trim();
            const gioiTinh = $('select[name="GioiTinh"]').val();
            const maCap = $('select[name="MaCap"]').val();

            const regexHoTen = /^[^\d]+$/;
            const regexEmail = /^[^\s@@]+@@[^\s@@]+\.[^\s@@]+$/;
            const regexChiToanSo = /^\d+$/;
            const isTrung = await $.get('/QuanLyKhachHang/KiemTraTaiKhoanTrung', { taiKhoan })
                .then(res => res.isTrung)
                .catch(() => false);

            if (!taiKhoan) {
                Swal.fire({
                    icon: 'warning',
                    title: 'Thiếu thông tin',
                    text: 'Tài khoản không được để trống.',
                    confirmButtonText: 'OK',
                    customClass: { confirmButton: 'swal-button-blue' }
                });
                return;
            }
            if (isTrung) {
                Swal.fire({
                    icon: 'error',
                    title: 'Tài khoản đã tồn tại',
                    text: `Tài khoản "${taiKhoan}" đã có. Vui lòng nhập tài khoản khác.`,
                    confirmButtonText: 'OK',
                    customClass: { confirmButton: 'swal-button-blue' }
                });
                return;
            }
            if (!matKhau) {
                Swal.fire({
                    icon: 'warning',
                    title: 'Thiếu thông tin',
                    text: 'Mật khẩu không được để trống.',
                    confirmButtonText: 'OK',
                    customClass: { confirmButton: 'swal-button-blue' }
                });
                return;
            }
            if (!hoTen) {
                Swal.fire({
                    icon: 'warning',
                    title: 'Thiếu thông tin',
                    text: 'Họ tên không được để trống.',
                    confirmButtonText: 'OK',
                    customClass: { confirmButton: 'swal-button-blue' }
                });
                return;
            }
            if (!email) {
                Swal.fire({
                    icon: 'warning',
                    title: 'Thiếu thông tin',
                    text: 'Email không được để trống.',
                    confirmButtonText: 'OK',
                    customClass: { confirmButton: 'swal-button-blue' }
                });
                return;
            }
            if (!soDT) {
                Swal.fire({
                    icon: 'warning',
                    title: 'Thiếu thông tin',
                    text: 'Số điện thoại không được để trống.',
                    confirmButtonText: 'OK',
                    customClass: { confirmButton: 'swal-button-blue' }
                });
                return;
            }
            if (!gioiTinh) {
                Swal.fire({
                    icon: 'warning',
                    title: 'Thiếu thông tin',
                    text: 'Phải chọn giới tính.',
                    confirmButtonText: 'OK',
                    customClass: { confirmButton: 'swal-button-blue' }
                });
                return;
            }
            if (!maCap) {
                Swal.fire({
                    icon: 'warning',
                    title: 'Thiếu thông tin',
                    text: 'Phân cấp không đươc để trống.',
                    confirmButtonText: 'OK',
                    customClass: { confirmButton: 'swal-button-blue' }
                });
                return;
            }
            if (taiKhoan.length < 5) {
                Swal.fire({
                    icon: 'warning',
                    title: 'Tài khoản không hợp lệ',
                    text: 'Tài khoản phải có ít nhất 5 ký tự.',
                    confirmButtonText: 'OK',
                    customClass: { confirmButton: 'swal-button-blue' }
                });
                return;
            }

            if (matKhau.length < 6) {
                Swal.fire({
                    icon: 'warning',
                    title: 'Mật khẩu không hợp lệ',
                    text: 'Mật khẩu phải có ít nhất 6 ký tự.',
                    confirmButtonText: 'OK',
                    customClass: { confirmButton: 'swal-button-blue' }
                });
                return;
            }

            if (!regexHoTen.test(hoTen)) {
                Swal.fire({
                    icon: 'warning',
                    title: 'Họ tên không hợp lệ',
                    text: 'Họ tên không được chứa số.',
                    confirmButtonText: 'OK',
                    customClass: { confirmButton: 'swal-button-blue' }
                });
                return;
            }

            if (!regexEmail.test(email)) {
                Swal.fire({
                    icon: 'warning',
                    title: 'Email không hợp lệ',
                    text: 'Vui lòng nhập đúng định dạng email.',
                    confirmButtonText: 'OK',
                    customClass: { confirmButton: 'swal-button-blue' }
                });
                return;
            }

            if (!regexChiToanSo.test(soDT)) {
                Swal.fire({
                    icon: 'warning',
                    title: 'Số điện thoại không hợp lệ',
                    text: 'Số điện thoại chỉ được chứa số (0–9).',
                    confirmButtonText: 'OK',
                    customClass: { confirmButton: 'swal-button-blue' }
                });
                return;
            }
            if (!soDT.startsWith('0')) {
                Swal.fire({
                    icon: 'warning',
                    title: 'Số điện thoại không hợp lệ',
                    text: 'Số điện thoại phải bắt đầu bằng số 0.',
                    confirmButtonText: 'OK',
                    customClass: { confirmButton: 'swal-button-blue' }
                });
                return;
            }
            if (soDT.length < 9 || soDT.length > 10) {
                Swal.fire({
                    icon: 'warning',
                    title: 'Số điện thoại không hợp lệ',
                    text: 'Số điện thoại phải có 9 hoặc 10 số.',
                    confirmButtonText: 'OK',
                    customClass: { confirmButton: 'swal-button-blue' }
                });
                return;
            }
            var formData = $(this).serialize();
            $.post('/QuanLyKhachHang/ThemNguoiDung', formData, function (res) {
                if (res.isSuccess) {
                    $('#modalThemKhachHang').modal('hide');
                    Swal.fire({
                        icon: 'success',
                        title: 'Thêm thành công!',
                        timer: 1500,
                        showConfirmButton: false
                    }).then(() => location.reload());
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Thêm thất bại!',
                        text: res.message
                    });
                }
            });
        });
        function openModalSuaKhachHang(maKH) {
            $.get('/QuanLyKhachHang/GetThongTinKhachHang', { maKhachHang: maKH }, function (data) {
                if (!data) {
                    alert("Không lấy được dữ liệu.");
                    return;
                }

                $('#editMaKhachHang').val(data.maKhachHang);
                $('#editTaiKhoan').val(data.taiKhoan);
                $('#editHoTen').val(data.hoTen);
                $('#editEmail').val(data.email);
                $('#editSoDT').val(data.soDT);
                $('#editGioiTinh').val(data.gioiTinh);

                loadCapEdit(data.maCap);

                $('#modalSuaKhachHang').modal('show');
            });
        }

        function loadCapEdit(selectedCap) {
            $.get('/QuanLyKhachHang/GetDanhSachCap', function (data) {
                const select = $('#editMaCap');
                select.empty();
                select.append('<option value="">Chọn cấp</option>');
                data.forEach(c => {
                    const selected = c.maCap === selectedCap ? 'selected' : '';
                    select.append(`<option value="${c.maCap}" ${selected}>${c.tenCap}</option>`);
                });
            });
        }

        $('#formSuaKhachHang').submit(async function (e) {
            e.preventDefault();
            const maKhachHang = $('#editMaKhachHang').val();
            const taiKhoan = $('#editTaiKhoan').val().trim();
            const hoTen = $('#editHoTen').val().trim();
            const email = $('#editEmail').val().trim();
            const soDT = $('#editSoDT').val().trim();
            const gioiTinh = $('#editGioiTinh').val();
            const maCap = $('#editMaCap').val();

            const regexHoTen = /^[^\d]+$/;
            const regexEmail = /^[^\s@@]+@@[^\s@@]+\.[^\s@@]+$/;
            const regexChiToanSo = /^\d+$/;
            const isTrung = await $.get('/QuanLyKhachHang/KiemTraTaiKhoanTrung', {
                taiKhoan,
                maKhachHang
            })
                .then(res => res.isTrung)
                .catch(() => false);

            if (!taiKhoan) {
                Swal.fire({
                    icon: 'warning',
                    title: 'Thiếu thông tin',
                    text: 'Tài khoản không được để trống.',
                    confirmButtonText: 'OK',
                    customClass: { confirmButton: 'swal-button-blue' }
                });
                return;
            }
            if (isTrung) {
                Swal.fire({
                    icon: 'error',
                    title: 'Tài khoản đã tồn tại',
                    text: `Tài khoản "${taiKhoan}" đã có. Vui lòng nhập tài khoản khác.`,
                    confirmButtonText: 'OK',
                    customClass: { confirmButton: 'swal-button-blue' }
                });
                return;
            }
            if (!hoTen) {
                Swal.fire({
                    icon: 'warning',
                    title: 'Thiếu thông tin',
                    text: 'Họ tên không được để trống.',
                    confirmButtonText: 'OK',
                    customClass: { confirmButton: 'swal-button-blue' }
                });
                return;
            }
            if (!email) {
                Swal.fire({
                    icon: 'warning',
                    title: 'Thiếu thông tin',
                    text: 'Email không được để trống.',
                    confirmButtonText: 'OK',
                    customClass: { confirmButton: 'swal-button-blue' }
                });
                return;
            }
            if (!soDT) {
                Swal.fire({
                    icon: 'warning',
                    title: 'Thiếu thông tin',
                    text: 'Số điện thoại không được để trống.',
                    confirmButtonText: 'OK',
                    customClass: { confirmButton: 'swal-button-blue' }
                });
                return;
            }
            if (!gioiTinh) {
                Swal.fire({
                    icon: 'warning',
                    title: 'Thiếu thông tin',
                    text: 'Phải chọn giới tính.',
                    confirmButtonText: 'OK',
                    customClass: { confirmButton: 'swal-button-blue' }
                });
                return;
            }
            if (!maCap) {
                Swal.fire({
                    icon: 'warning',
                    title: 'Thiếu thông tin',
                    text: 'Phân cấp không đươc để trống.',
                    confirmButtonText: 'OK',
                    customClass: { confirmButton: 'swal-button-blue' }
                });
                return;
            }
            if (taiKhoan.length < 5) {
                Swal.fire({
                    icon: 'warning',
                    title: 'Tài khoản không hợp lệ',
                    text: 'Tài khoản phải có ít nhất 5 ký tự.',
                    confirmButtonText: 'OK',
                    customClass: { confirmButton: 'swal-button-blue' }
                });
                return;
            }

            if (!regexHoTen.test(hoTen)) {
                Swal.fire({
                    icon: 'warning',
                    title: 'Họ tên không hợp lệ',
                    text: 'Họ tên không được chứa số.',
                    confirmButtonText: 'OK',
                    customClass: { confirmButton: 'swal-button-blue' }
                });
                return;
            }

            if (!regexEmail.test(email)) {
                Swal.fire({
                    icon: 'warning',
                    title: 'Email không hợp lệ',
                    text: 'Vui lòng nhập đúng định dạng email.',
                    confirmButtonText: 'OK',
                    customClass: { confirmButton: 'swal-button-blue' }
                });
                return;
            }

            if (!regexChiToanSo.test(soDT)) {
                Swal.fire({
                    icon: 'warning',
                    title: 'Số điện thoại không hợp lệ',
                    text: 'Số điện thoại chỉ được chứa số (0–9).',
                    confirmButtonText: 'OK',
                    customClass: { confirmButton: 'swal-button-blue' }
                });
                return;
            }
            if (!soDT.startsWith('0')) {
                Swal.fire({
                    icon: 'warning',
                    title: 'Số điện thoại không hợp lệ',
                    text: 'Số điện thoại phải bắt đầu bằng số 0.',
                    confirmButtonText: 'OK',
                    customClass: { confirmButton: 'swal-button-blue' }
                });
                return;
            }
            if (soDT.length < 9 || soDT.length > 10) {
                Swal.fire({
                    icon: 'warning',
                    title: 'Số điện thoại không hợp lệ',
                    text: 'Số điện thoại phải có 9 hoặc 10 số.',
                    confirmButtonText: 'OK',
                    customClass: { confirmButton: 'swal-button-blue' }
                });
                return;
            }

            const formData = $(this).serialize();
            $.post('/QuanLyKhachHang/CapNhatNguoiDung', formData, function (res) {
                if (res.isSuccess) {
                    $('#modalSuaKhachHang').modal('hide');
                    Swal.fire({ icon: 'success', title: 'Cập nhật thành công!', timer: 1500, showConfirmButton: false })
                        .then(() => location.reload());
                } else {
                    Swal.fire({ icon: 'error', title: 'Lỗi cập nhật', text: res.message });
                }
            });
        });
        function xoaNguoiDung(maKhachHang, taiKhoan) {
            Swal.fire({
                title: 'Xác nhận xóa?',
                text: `Bạn có chắc muốn xóa người dùng "${taiKhoan}"?`,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#aaa',
                confirmButtonText: 'Xóa',
                cancelButtonText: 'Hủy'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '/QuanLyKhachHang/XoaNguoiDung',
                        method: 'POST',
                        data: { maKhachHang },
                        success: function (res) {
                            if (res.isSuccess) {
                                Swal.fire({
                                    icon: 'success',
                                    title: 'Đã xóa thành công!',
                                    timer: 1500,
                                    showConfirmButton: false
                                }).then(() => location.reload());
                            } else {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Xóa thất bại!',
                                    text: res.message
                                });
                            }
                        },
                        error: function () {
                            Swal.fire({
                                icon: 'error',
                                title: 'Lỗi server',
                                text: 'Không thể xóa người dùng.'
                            });
                        }
                    });
                }
            });
        }
    </script>
}
